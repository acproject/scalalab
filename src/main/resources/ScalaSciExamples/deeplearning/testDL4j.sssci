import scalaExec.Interpreter.GlobalValues
import scala.tools.nsc.{ ConsoleWriter,Interpreter => IR, NewLinePrintWriter, Settings }


var settings = new Settings
 settings.Xexperimental.value=true
 //   settings.Ybackend.value = "GenBCode"
    settings.Ydelambdafy.value = "inline"
    
    
    // make the classpath settable by user
    scalalab.JavaUtilities.setByUser(settings)

scalalab.JavaUtilities.useJavaCP(settings) 
var dl4str= "/home/sterg/appleBTFS/NBProjects/ScalaLabNew/scalalab-master/dl4j.jar"
settings.classpath.append(dl4str)
  settings.classpath.append(scalalab.JavaGlobals.jarFilePath)  // the Scalalab .jar file by itself
      settings.classpath.append(scalalab.JavaGlobals.compFile)  // Scala Compiler
      settings.classpath.append(scalalab.JavaGlobals.libFile)     // Scala Libraries
      settings.classpath.append(scalalab.JavaGlobals.reflectFile)  // scala-reflect file
      settings.classpath.append(scalalab.JavaGlobals.swingFile)  // Scala Swing
    

var newInterpreter = new scala.tools.nsc.interpreter.IMain(settings)


newInterpreter.interpret("""
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.factory.Nd4j;

import java.util.Arrays;
""")



newInterpreter.interpret("var x = Nd4j.rand(9,9)") 
